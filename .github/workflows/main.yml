name: Douglas WDIO TypeScript Deployment
on:
  push:
    branches:
      - main
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.10.0

      # Install dependencies
      - name: Install dependencies
        run: npm install

      # Build Docker image
      - name: Build Docker Image
        run: docker build -t douglas-wdio-test .

      # Log in to AWS EC2 instance
      - name: Deploy to EC2
        env:
          PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }}
          HOST: ${{ secrets.EC2_HOST }}
          USERNAME: ubuntu
        run: |
          echo "${{ secrets.EC2_PRIVATE_KEY }}" > private_key.pem
          chmod 600 private_key.pem
          ssh -i private_key.pem -T -o StrictHostKeyChecking=no ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} << 'EOF'
            docker stop douglas-wdio-test || true
            docker rm douglas-wdio-test || true
            docker rmi douglas-wdio-test || true
            mkdir -p ~/douglas-wdio-test
            exit
          EOF

      # Upload Docker Image to EC2
      - name: Push Docker Image to EC2
        run: |
          scp -i private_key.pem -o StrictHostKeyChecking=no ./docker-compose.yml private_key.pem douglas-wdio-test.tar ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }}:~/douglas-wdio-test/
          ssh -i private_key.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} << 'EOF'
            cd ~/douglas-wdio-test
            docker load < douglas-wdio-test.tar
            docker-compose up -d
            exit
          EOF
